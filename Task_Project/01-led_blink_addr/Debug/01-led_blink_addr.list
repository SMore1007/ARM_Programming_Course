
01-led_blink_addr.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001e4  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003a8  080003b0  000013b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003a8  080003a8  000013b0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080003a8  080003a8  000013b0  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080003a8  080003b0  000013b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003a8  080003a8  000013a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003ac  080003ac  000013ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003b0  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003b0  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000013b0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000000f9  00000000  00000000  000013e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000ad  00000000  00000000  000014d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00001588  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000033  00000000  00000000  000015d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000fa6  00000000  00000000  0000160b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000501  00000000  00000000  000025b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003d09  00000000  00000000  00002ab2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000067bb  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  00006800  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  00006880  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000390 	.word	0x08000390

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000390 	.word	0x08000390

08000204 <delay>:

#define RCC_AHB1ENR (*(uint32_t *)0x40023830)
#define GPIOB_MODER (*(uint32_t *)0x40020400)
#define GPIOB_ODR   (*(uint32_t *)0x40020414)

void delay(void) {
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
    for (int i = 0; i < 1000000; i++) {
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e003      	b.n	8000218 <delay+0x14>
        __asm__("nop");
 8000210:	bf00      	nop
    for (int i = 0; i < 1000000; i++) {
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	3301      	adds	r3, #1
 8000216:	607b      	str	r3, [r7, #4]
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	4a05      	ldr	r2, [pc, #20]	@ (8000230 <delay+0x2c>)
 800021c:	4293      	cmp	r3, r2
 800021e:	ddf7      	ble.n	8000210 <delay+0xc>
    }
}
 8000220:	bf00      	nop
 8000222:	bf00      	nop
 8000224:	370c      	adds	r7, #12
 8000226:	46bd      	mov	sp, r7
 8000228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop
 8000230:	000f423f 	.word	0x000f423f

08000234 <main>:

int main(void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0
    // Enable clock for GPIOB
    RCC_AHB1ENR |= (1 << 1);
 8000238:	4b2b      	ldr	r3, [pc, #172]	@ (80002e8 <main+0xb4>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a2a      	ldr	r2, [pc, #168]	@ (80002e8 <main+0xb4>)
 800023e:	f043 0302 	orr.w	r3, r3, #2
 8000242:	6013      	str	r3, [r2, #0]

    // Set PB3 as output
    GPIOB_MODER |=  (1 << 6);
 8000244:	4b29      	ldr	r3, [pc, #164]	@ (80002ec <main+0xb8>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	4a28      	ldr	r2, [pc, #160]	@ (80002ec <main+0xb8>)
 800024a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800024e:	6013      	str	r3, [r2, #0]
    GPIOB_MODER &= ~(1 << 7);
 8000250:	4b26      	ldr	r3, [pc, #152]	@ (80002ec <main+0xb8>)
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	4a25      	ldr	r2, [pc, #148]	@ (80002ec <main+0xb8>)
 8000256:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800025a:	6013      	str	r3, [r2, #0]

    // Set PB8 as output
    GPIOB_MODER |=  (1 << 16);
 800025c:	4b23      	ldr	r3, [pc, #140]	@ (80002ec <main+0xb8>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	4a22      	ldr	r2, [pc, #136]	@ (80002ec <main+0xb8>)
 8000262:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000266:	6013      	str	r3, [r2, #0]
    GPIOB_MODER &= ~(1 << 17);
 8000268:	4b20      	ldr	r3, [pc, #128]	@ (80002ec <main+0xb8>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	4a1f      	ldr	r2, [pc, #124]	@ (80002ec <main+0xb8>)
 800026e:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8000272:	6013      	str	r3, [r2, #0]

    while (1)
    {
        GPIOB_ODR |=  (1 << 3);   // PB3 ON
 8000274:	4b1e      	ldr	r3, [pc, #120]	@ (80002f0 <main+0xbc>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	4a1d      	ldr	r2, [pc, #116]	@ (80002f0 <main+0xbc>)
 800027a:	f043 0308 	orr.w	r3, r3, #8
 800027e:	6013      	str	r3, [r2, #0]
        GPIOB_ODR &= ~(1 << 8);   // PB8 OFF
 8000280:	4b1b      	ldr	r3, [pc, #108]	@ (80002f0 <main+0xbc>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	4a1a      	ldr	r2, [pc, #104]	@ (80002f0 <main+0xbc>)
 8000286:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800028a:	6013      	str	r3, [r2, #0]
        delay();
 800028c:	f7ff ffba 	bl	8000204 <delay>

        GPIOB_ODR |=  (1 << 3);   // PB3 ON
 8000290:	4b17      	ldr	r3, [pc, #92]	@ (80002f0 <main+0xbc>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a16      	ldr	r2, [pc, #88]	@ (80002f0 <main+0xbc>)
 8000296:	f043 0308 	orr.w	r3, r3, #8
 800029a:	6013      	str	r3, [r2, #0]
        GPIOB_ODR |=  (1 << 8);   // PB8 ON
 800029c:	4b14      	ldr	r3, [pc, #80]	@ (80002f0 <main+0xbc>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a13      	ldr	r2, [pc, #76]	@ (80002f0 <main+0xbc>)
 80002a2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80002a6:	6013      	str	r3, [r2, #0]
        delay();
 80002a8:	f7ff ffac 	bl	8000204 <delay>

        GPIOB_ODR &= ~(1 << 3);   // PB3 OFF
 80002ac:	4b10      	ldr	r3, [pc, #64]	@ (80002f0 <main+0xbc>)
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	4a0f      	ldr	r2, [pc, #60]	@ (80002f0 <main+0xbc>)
 80002b2:	f023 0308 	bic.w	r3, r3, #8
 80002b6:	6013      	str	r3, [r2, #0]
        GPIOB_ODR |=  (1 << 8);   // PB8 ON
 80002b8:	4b0d      	ldr	r3, [pc, #52]	@ (80002f0 <main+0xbc>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	4a0c      	ldr	r2, [pc, #48]	@ (80002f0 <main+0xbc>)
 80002be:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80002c2:	6013      	str	r3, [r2, #0]
        delay();
 80002c4:	f7ff ff9e 	bl	8000204 <delay>

        GPIOB_ODR &= ~(1 << 3);   // PB3 OFF
 80002c8:	4b09      	ldr	r3, [pc, #36]	@ (80002f0 <main+0xbc>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	4a08      	ldr	r2, [pc, #32]	@ (80002f0 <main+0xbc>)
 80002ce:	f023 0308 	bic.w	r3, r3, #8
 80002d2:	6013      	str	r3, [r2, #0]
        GPIOB_ODR &= ~(1 << 8);   // PB8 OFF
 80002d4:	4b06      	ldr	r3, [pc, #24]	@ (80002f0 <main+0xbc>)
 80002d6:	681b      	ldr	r3, [r3, #0]
 80002d8:	4a05      	ldr	r2, [pc, #20]	@ (80002f0 <main+0xbc>)
 80002da:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80002de:	6013      	str	r3, [r2, #0]
        delay();
 80002e0:	f7ff ff90 	bl	8000204 <delay>
        GPIOB_ODR |=  (1 << 3);   // PB3 ON
 80002e4:	bf00      	nop
 80002e6:	e7c5      	b.n	8000274 <main+0x40>
 80002e8:	40023830 	.word	0x40023830
 80002ec:	40020400 	.word	0x40020400
 80002f0:	40020414 	.word	0x40020414

080002f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002f4:	480d      	ldr	r0, [pc, #52]	@ (800032c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002f6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002f8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002fc:	480c      	ldr	r0, [pc, #48]	@ (8000330 <LoopForever+0x6>)
  ldr r1, =_edata
 80002fe:	490d      	ldr	r1, [pc, #52]	@ (8000334 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000300:	4a0d      	ldr	r2, [pc, #52]	@ (8000338 <LoopForever+0xe>)
  movs r3, #0
 8000302:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000304:	e002      	b.n	800030c <LoopCopyDataInit>

08000306 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000306:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000308:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800030a:	3304      	adds	r3, #4

0800030c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800030c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800030e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000310:	d3f9      	bcc.n	8000306 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000312:	4a0a      	ldr	r2, [pc, #40]	@ (800033c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000314:	4c0a      	ldr	r4, [pc, #40]	@ (8000340 <LoopForever+0x16>)
  movs r3, #0
 8000316:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000318:	e001      	b.n	800031e <LoopFillZerobss>

0800031a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800031a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800031c:	3204      	adds	r2, #4

0800031e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800031e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000320:	d3fb      	bcc.n	800031a <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 8000322:	f000 f811 	bl	8000348 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000326:	f7ff ff85 	bl	8000234 <main>

0800032a <LoopForever>:

LoopForever:
  b LoopForever
 800032a:	e7fe      	b.n	800032a <LoopForever>
  ldr   r0, =_estack
 800032c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000330:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000334:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000338:	080003b0 	.word	0x080003b0
  ldr r2, =_sbss
 800033c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000340:	2000001c 	.word	0x2000001c

08000344 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000344:	e7fe      	b.n	8000344 <ADC_IRQHandler>
	...

08000348 <__libc_init_array>:
 8000348:	b570      	push	{r4, r5, r6, lr}
 800034a:	4d0d      	ldr	r5, [pc, #52]	@ (8000380 <__libc_init_array+0x38>)
 800034c:	4c0d      	ldr	r4, [pc, #52]	@ (8000384 <__libc_init_array+0x3c>)
 800034e:	1b64      	subs	r4, r4, r5
 8000350:	10a4      	asrs	r4, r4, #2
 8000352:	2600      	movs	r6, #0
 8000354:	42a6      	cmp	r6, r4
 8000356:	d109      	bne.n	800036c <__libc_init_array+0x24>
 8000358:	4d0b      	ldr	r5, [pc, #44]	@ (8000388 <__libc_init_array+0x40>)
 800035a:	4c0c      	ldr	r4, [pc, #48]	@ (800038c <__libc_init_array+0x44>)
 800035c:	f000 f818 	bl	8000390 <_init>
 8000360:	1b64      	subs	r4, r4, r5
 8000362:	10a4      	asrs	r4, r4, #2
 8000364:	2600      	movs	r6, #0
 8000366:	42a6      	cmp	r6, r4
 8000368:	d105      	bne.n	8000376 <__libc_init_array+0x2e>
 800036a:	bd70      	pop	{r4, r5, r6, pc}
 800036c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000370:	4798      	blx	r3
 8000372:	3601      	adds	r6, #1
 8000374:	e7ee      	b.n	8000354 <__libc_init_array+0xc>
 8000376:	f855 3b04 	ldr.w	r3, [r5], #4
 800037a:	4798      	blx	r3
 800037c:	3601      	adds	r6, #1
 800037e:	e7f2      	b.n	8000366 <__libc_init_array+0x1e>
 8000380:	080003a8 	.word	0x080003a8
 8000384:	080003a8 	.word	0x080003a8
 8000388:	080003a8 	.word	0x080003a8
 800038c:	080003ac 	.word	0x080003ac

08000390 <_init>:
 8000390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000392:	bf00      	nop
 8000394:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000396:	bc08      	pop	{r3}
 8000398:	469e      	mov	lr, r3
 800039a:	4770      	bx	lr

0800039c <_fini>:
 800039c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039e:	bf00      	nop
 80003a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003a2:	bc08      	pop	{r3}
 80003a4:	469e      	mov	lr, r3
 80003a6:	4770      	bx	lr
